expeditor:
  defaults:
    buildkite:
      timeout_in_minutes: 60
      env: 
        HAB_BLDR_CHANNEL: "LTS-2024"
steps:
#######################################################################
# Linting!
#######################################################################

  - label: "[unit] :linux: ARM Platform Support"
    command:
      - .expeditor/scripts/verify/run_native_cargo_test.sh
    agents:
      queue: docker-linux-arm64
    plugins:
      - docker#v3.13.0:
          image: "rust:1.62.1-buster"

  - label: "[lint] :linux: :bash: Shellcheck"
    command:
      - .expeditor/scripts/verify/shellcheck.sh
    expeditor:
      executor:
        docker:
    timeout_in_minutes: 10
    retry:
      automatic:
        limit: 1

  - label: "[lint] :windows: PSScriptAnalyzer!"
    command:
      - .expeditor\scripts\verify\run_psscriptanalyzer.ps1
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    timeout_in_minutes: 10

  - label: "[lint] :linux: :bash: rustfmt"
    command:
      - .expeditor/scripts/verify/rustfmt.sh
    expeditor:
      executor:
        docker:
    timeout_in_minutes: 10
    retry:
      automatic:
        limit: 1

  - label: "[lint] :linux: :paperclip: clippy!"
    command: make lint
    expeditor:
      executor:
        docker:
          privileged: true
    timeout_in_minutes: 10

  - label: "[lint] :windows: :paperclip: clippy!"
    command:
      - .expeditor\scripts\verify\run_clippy.ps1 .\support\unexamined_lints.txt .\support\allowed_lints.txt .\support\lints_to_fix.txt .\support\denied_lints.txt
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    timeout_in_minutes: 40



#######################################################################
# CI Tests!
#######################################################################

  - label: "[unit] CI Tests :scream:"
    command:
      - cd .expeditor
      - ./run-bats.sh
    expeditor:
      executor:
        # The tests could theoretically be run under the Docker
        # executor if the chefes/buildkite image had the bats
        # helpers this expects. For now, though, try running the
        # test in Docker "manually".
        linux:
          privileged: true

#######################################################################
# Unit Tests - Linux!
#######################################################################

  # Tests can be tagged with `#[ignore]` for a variety of reasons; see the individual tests for
  # annotations explaining why. There shouldn't be many of these tests, and to make sure they
  # continue to function, run all such tests for the workspace at once.

  # Note that until buildkite instances update their docker engine to one that includes
  # runc v1.0.0-rc93 or greater, we must run run_cargo_test.sh with --privileged. This is
  # because the older runc does not honor system calls from GLIBC 2.33 which was in the
  # latest refresh.
  - label: "[unit] :linux: ignored"
    command:
      - .expeditor/scripts/verify/run_cargo_test.sh -- --ignored
    expeditor:
      executor:
        docker:
          privileged: true
    timeout_in_minutes: 20
    retry:
      automatic:
        limit: 1

  - label: "[unit] :linux: builder-api-client"
    command:
      - .expeditor/scripts/verify/run_cargo_test.sh builder-api-client
    expeditor:
      executor:
        docker:
          privileged: true
    timeout_in_minutes: 20
    retry:
      automatic:
        limit: 1

  - label: "[unit] :linux: butterfly lock_as_mutex"
    command:
      - .expeditor/scripts/verify/run_cargo_test.sh butterfly --features "lock_as_mutex" -- --test-threads=1 --format=pretty
    expeditor:
      executor:
        docker:
          privileged: true
    timeout_in_minutes: 20
    soft_fail: true

  - label: "[unit] :linux: butterfly lock_as_rwlock"
    command:
      - .expeditor/scripts/verify/run_cargo_test.sh butterfly --features "lock_as_rwlock" -- --test-threads=1 --format=pretty
    expeditor:
      executor:
        docker:
          privileged: true
    timeout_in_minutes: 20
    retry:
      automatic:
        limit: 1

  - label: "[unit] :linux: common"
    command:
      - .expeditor/scripts/verify/run_cargo_test.sh common
    agents:
      queue: 'default-privileged'
    plugins:
      docker#v3.3.0:
        always-pull: true
        user: "buildkite-agent"
        group: "buildkite-agent"
        image: "chefes/buildkite"
        privileged: true
    timeout_in_minutes: 10
    retry:
      automatic:
        limit: 1

  - label: "[unit] :linux: core"
    command:
      - .expeditor/scripts/verify/run_cargo_test.sh core
    expeditor:
      executor:
        docker:
          privileged: true
    timeout_in_minutes: 10
    retry:
      automatic:
        limit: 1

  - label: "[unit] :linux: core functional"
    command:
      - .expeditor/scripts/verify/run_cargo_test.sh core --features "functional" -- --format=pretty
    expeditor:
      executor:
        docker:
          privileged: true
    timeout_in_minutes: 20

  - label: "[unit] :linux: http-client"
    command:
      - .expeditor/scripts/verify/run_cargo_test.sh http-client
    expeditor:
      executor:
        docker:
          privileged: true
    timeout_in_minutes: 10
    retry:
      automatic:
        limit: 1

  - label: "[unit] :linux: hab"
    command:
      - .expeditor/scripts/verify/run_cargo_test.sh hab
    expeditor:
      executor:
        docker:
          privileged: true
    timeout_in_minutes: 10
    retry:
      automatic:
        limit: 1

  - label: "[unit] :linux: launcher-client"
    command:
      - .expeditor/scripts/verify/run_cargo_test.sh launcher-client
    expeditor:
      executor:
        docker:
          privileged: true
    timeout_in_minutes: 10
    retry:
      automatic:
        limit: 1

  - label: "[unit] :linux: launcher-protocol"
    command:
      - .expeditor/scripts/verify/run_cargo_test.sh launcher-protocol
    expeditor:
      executor:
        docker:
          privileged: true
    timeout_in_minutes: 10
    retry:
      automatic:
        limit: 1

  - label: "[unit] :linux: pkg-export-container"
    command:
      - .expeditor/scripts/verify/run_cargo_test.sh pkg-export-container
    expeditor:
      executor:
        docker:
          privileged: true
    timeout_in_minutes: 10
    retry:
      automatic:
        limit: 1

  - label: "[unit] :linux: pkg-export-tar"
    command:
      - .expeditor/scripts/verify/run_cargo_test.sh pkg-export-tar
    expeditor:
      executor:
        docker:
          privileged: true
    timeout_in_minutes: 10
    retry:
      automatic:
        limit: 1

  - label: "[unit] :linux: sup lock_as_rwlock"
    command:
      - .expeditor/scripts/verify/run_cargo_test.sh sup --features "lock_as_rwlock"
    expeditor:
      executor:
        docker:
          privileged: true
    timeout_in_minutes: 40
    retry:
      automatic:
        limit: 1

  - label: "[unit] :linux: sup lock_as_mutex"
    command:
      - .expeditor/scripts/verify/run_cargo_test.sh sup --features "lock_as_mutex"
    expeditor:
      executor:
        docker:
          privileged: true
    timeout_in_minutes: 40
    soft_fail: true

  - label: "[unit] :linux: sup-client"
    command:
      - .expeditor/scripts/verify/run_cargo_test.sh sup-client
    expeditor:
      executor:
        docker:
          privileged: true
    timeout_in_minutes: 10
    retry:
      automatic:
        limit: 1

  - label: "[unit] :linux: sup-protocol"
    command:
      - .expeditor/scripts/verify/run_cargo_test.sh sup-protocol
    expeditor:
      executor:
        docker:
          privileged: true
    timeout_in_minutes: 10
    retry:
      automatic:
        limit: 1

  - label: "[unit] :linux: studio"
    command:
      - .expeditor/scripts/verify/run_studio_test.sh
    expeditor:
      executor:
        linux:
          privileged: true
          single-use: true
    timeout_in_minutes: 5
    retry:
      automatic:
        limit: 1

  - label: "[unit] :linux: install script"
    env:
      HAB_LICENSE: "accept-no-persist"
    command:
      - .expeditor/scripts/verify/test_install_script.sh
    expeditor:
      executor:
        docker:
    timeout_in_minutes: 5
    retry:
      automatic:
        limit: 1
  ###############################################################
  # MacOS tests
  - label: "[unit] :darwin: install script"
    env:
      HAB_LICENSE: "accept-no-persist"
    command:
      - .expeditor/scripts/verify/test_install_script.sh
    expeditor:
      executor:
        macos:
          os-version: "12"
          inherit-environment-vars: true
    retry:
      automatic:
        limit: 10 # Addressing current Anka system timeouts due to oversubscription

 #################################################################

  # See "[unit] :linux: ignored"; the same approach applies here for windows
  - label: "[unit] :windows: ignored"
    command:
      - .expeditor/scripts/verify/run_cargo_test.ps1 -TestOptions "--ignored"
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    timeout_in_minutes: 20
    retry:
      automatic:
        limit: 1

  - label: "[unit] :windows: builder-api-client"
    command:
      - .expeditor/scripts/verify/run_cargo_test.ps1 builder-api-client
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    timeout_in_minutes: 25
    retry:
      automatic:
        limit: 1

  - label: "[unit] :windows: butterfly lock_as_mutex"
    command:
      - .expeditor/scripts/verify/run_cargo_test.ps1 butterfly -Nightly -Features "lock_as_mutex deadlock_detection" -TestOptions "--test-threads=1"
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    timeout_in_minutes: 25
    soft_fail: true

  - label: "[unit] :windows: butterfly lock_as_rwlock"
    command:
      - .expeditor/scripts/verify/run_cargo_test.ps1 butterfly -Nightly -Features "lock_as_rwlock deadlock_detection" -TestOptions "--test-threads=1"
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    timeout_in_minutes: 40
    retry:
      automatic:
        limit: 1

  - label: "[unit] :windows: common"
    command:
      - .expeditor/scripts/verify/run_cargo_test.ps1 common -TestOptions "--test-threads=1"
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    timeout_in_minutes: 25
    retry:
      automatic:
        limit: 1

  - label: "[unit] :windows: core"
    command:
      - .expeditor/scripts/verify/run_cargo_test.ps1 core
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    timeout_in_minutes: 20
    retry:
      automatic:
        limit: 1

  - label: "[unit] :windows: core functional"
    command:
      - .expeditor/scripts/verify/run_cargo_test.ps1 core -Features "functional"
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    timeout_in_minutes: 25

  - label: "[unit] :windows: hab"
    command:
      - .expeditor/scripts/verify/run_cargo_test.ps1 hab
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    timeout_in_minutes: 25
    retry:
      automatic:
        limit: 1

  - label: "[unit] :windows: http-client"
    command:
      - .expeditor/scripts/verify/run_cargo_test.ps1 http-client
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    timeout_in_minutes: 20
    retry:
      automatic:
        limit: 1

  - label: "[unit] :windows: launcher-client"
    command:
      - .expeditor/scripts/verify/run_cargo_test.ps1 launcher-client
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    timeout_in_minutes: 20
    retry:
      automatic:
        limit: 1

  - label: "[unit] :windows: launcher-protocol"
    command:
      - .expeditor/scripts/verify/run_cargo_test.ps1 launcher-protocol
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    timeout_in_minutes: 20
    retry:
      automatic:
        limit: 1

  - label: "[unit] :windows: pkg-export-container"
    command:
      - .expeditor/scripts/verify/run_cargo_test.ps1 pkg-export-container
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    timeout_in_minutes: 25
    retry:
      automatic:
        limit: 1

  - label: "[unit] :windows: pkg-export-tar"
    command:
      - .expeditor/scripts/verify/run_cargo_test.ps1 pkg-export-tar
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    timeout_in_minutes: 20
    retry:
      automatic:
        limit: 1

  - label: "[unit] :windows: sup lock_as_mutex"
    command:
      # This test has test (not code) concurrency issues and will fail if we don't limit it
      - .expeditor/scripts/verify/run_cargo_test.ps1 sup -Features "lock_as_mutex" -TestOptions "--test-threads=1"
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    timeout_in_minutes: 40
    soft_fail: true

  - label: "[unit] :windows: sup lock_as_rwlock"
    env:
    # Avoids timeouts creating health check named pipe in tests
      HAB_START_PIPE_TIMEOUT_SECS: 60
    command:
      # This test has test (not code) concurrency issues and will fail if we don't limit it
      - .expeditor/scripts/verify/run_cargo_test.ps1 sup -Features "lock_as_rwlock" -TestOptions "--test-threads=1"
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    timeout_in_minutes: 40
    retry:
      automatic:
        limit: 1

  - label: "[unit] :windows: sup-client"
    command:
      - .expeditor/scripts/verify/run_cargo_test.ps1 sup-client
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    timeout_in_minutes: 20
    retry:
      automatic:
        limit: 1

  - label: "[unit] :windows: sup-protocol"
    command:
      - .expeditor/scripts/verify/run_cargo_test.ps1 sup-protocol
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    timeout_in_minutes: 20
    retry:
      automatic:
        limit: 1

  - label: "[unit] :windows: studio"
    command:
      - .expeditor/scripts/verify/run_studio_test.ps1
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    timeout_in_minutes: 20
    retry:
      automatic:
        limit: 1

  - label: "[unit] :windows: plan-build-ps1"
    command:
      - components\plan-build-ps1\tests\test.ps1
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    timeout_in_minutes: 20
    retry:
      automatic:
        limit: 1

  - label: "[unit] :windows: install script"
    env:
      HAB_LICENSE: "accept-no-persist"
    command:
      - .expeditor/scripts/verify/test_install_script.ps1
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    timeout_in_minutes: 5
    retry:
      automatic:
        limit: 1

#######################################################################
# Things that have no tests but should be built to make sure they
# still build. - Linux
#######################################################################

  - label: "[build] :linux: test-probe"
    env:
      HAB_LICENSE: "accept-no-persist"
      BUILD_PKG_TARGET: "x86_64-linux"
    command:
      - .expeditor/scripts/verify/build_package.sh test-services/test-probe
    expeditor:
      executor:
        docker:
          privileged: true
    retry:
      automatic:
        limit: 1

# SHOULD BE UNCOMMENTED WHEN NEWER VERSION OF HAB IS RELEASED

  # - label: "[build] :linux: backline"
  #   env:
  #     HAB_LICENSE: "accept-no-persist"
  #     BUILD_PKG_TARGET: "x86_64-linux"

  #   command:
  #     - .expeditor/scripts/verify/build_package.sh components/backline
  #   expeditor:
  #     executor:
  #       docker:
  #         privileged: true
  #   retry:
  #     automatic:
  #       limit: 1

  - label: "[build] :linux: hab"
    env:
      HAB_LICENSE: "accept-no-persist"
      BUILD_PKG_TARGET: "x86_64-linux"
    command:
      - .expeditor/scripts/verify/build_package.sh components/hab
    expeditor:
      executor:
        docker:
          privileged: true
    retry:
      automatic:
        limit: 1

  - label: "[build] :linux: launcher"
    env:
      HAB_LICENSE: "accept-no-persist"
      BUILD_PKG_TARGET: "x86_64-linux"
    command:
      - .expeditor/scripts/verify/build_package.sh components/launcher
    expeditor:
      executor:
        docker:
          privileged: true
    retry:
      automatic:
        limit: 1

# SHOULD BE UNCOMMENTED WHEN NEWER VERSION OF HAB IS RELEASED

  # - label: "[build] :linux: pkg-cfize"
  #   env:
  #     HAB_LICENSE: "accept-no-persist"
  #     BUILD_PKG_TARGET: "x86_64-linux"
 
  #   command:
  #     - .expeditor/scripts/verify/build_package.sh components/pkg-cfize
  #   expeditor:
  #     executor:
  #       docker:
  #         privileged: true
  #   retry:
  #     automatic:
  #       limit: 1

  - label: "[build] :linux: pkg-export-container"
    env:
      HAB_LICENSE: "accept-no-persist"
      BUILD_PKG_TARGET: "x86_64-linux"
    command:
      - .expeditor/scripts/verify/build_package.sh components/pkg-export-container
    expeditor:
      executor:
        docker:
          privileged: true
    retry:
      automatic:
        limit: 1

  - label: "[build] :linux: pkg-export-tar"
    env:
      HAB_LICENSE: "accept-no-persist"
      BUILD_PKG_TARGET: "x86_64-linux"
    command:
      - .expeditor/scripts/verify/build_package.sh components/pkg-export-tar
    expeditor:
      executor:
        docker:
          privileged: true
    retry:
      automatic:
        limit: 1

  - label: "[build] :linux: pkg-mesosize"
    env:
      HAB_LICENSE: "accept-no-persist"
      BUILD_PKG_TARGET: "x86_64-linux"
    command:
      - .expeditor/scripts/verify/build_package.sh components/pkg-mesosize
    expeditor:
      executor:
        docker:
          privileged: true
    retry:
      automatic:
        limit: 1

  - label: "[build] :linux: plan-build"
    env:
      HAB_LICENSE: "accept-no-persist"
      BUILD_PKG_TARGET: "x86_64-linux"
    command:
      - .expeditor/scripts/verify/build_package.sh components/plan-build
    expeditor:
      executor:
        docker:
          privileged: true
    retry:
      automatic:
        limit: 1

  - label: "[build] :linux: studio"
    env:
      HAB_LICENSE: "accept-no-persist"
      BUILD_PKG_TARGET: "x86_64-linux"
    command:
      - .expeditor/scripts/verify/build_package.sh components/studio
    expeditor:
      executor:
        docker:
          privileged: true
    retry:
      automatic:
        limit: 1

  - label: "[build] :linux: sup"
    env:
      HAB_LICENSE: "accept-no-persist"
      BUILD_PKG_TARGET: "x86_64-linux"
    command:
      - .expeditor/scripts/verify/build_package.sh components/sup
    expeditor:
      executor:
        docker:
          privileged: true
    retry:
      automatic:
        limit: 1

#######################################################################
# Things that have no tests but should be built to make sure they
# still build. - Linux Kernel 2
#######################################################################

  - label: "[build] :linux: :two: build hab"
    command:
      - .expeditor/scripts/verify/build_package.sh components/hab
    env:
      HAB_LICENSE: "accept-no-persist"
      BUILD_PKG_TARGET: "x86_64-linux-kernel2"
      HAB_BLDR_CHANNEL: "stable"

    expeditor:
      executor:
        docker:
          privileged: true

  - label: "[build] :linux: :two: build hab-plan-build"
    command:
      - .expeditor/scripts/verify/build_package.sh components/plan-build
    env:
      HAB_LICENSE: "accept-no-persist"
      BUILD_PKG_TARGET: "x86_64-linux-kernel2"
      HAB_BLDR_CHANNEL: "stable"

    expeditor:
      executor:
        docker:
          privileged: true

  - label: "[build] :linux: :two: build hab-backline"
    command:
      - .expeditor/scripts/verify/build_package.sh components/backline
    env:
      HAB_LICENSE: "accept-no-persist"
      BUILD_PKG_TARGET: "x86_64-linux-kernel2"
      HAB_BLDR_CHANNEL: "stable"

    expeditor:
      executor:
        docker:
          privileged: true

  - label: "[build] :linux: :two: build hab-studio"
    command:
      - .expeditor/scripts/verify/build_package.sh components/studio
    env:
      HAB_LICENSE: "accept-no-persist"
      BUILD_PKG_TARGET: "x86_64-linux-kernel2"
      HAB_BLDR_CHANNEL: "stable"

    expeditor:
      executor:
        docker:
          privileged: true

  - label: "[build] :linux: :two: build launcher"
    command:
      - .expeditor/scripts/verify/build_package.sh components/launcher
    env:
      HAB_LICENSE: "accept-no-persist"
      BUILD_PKG_TARGET: "x86_64-linux-kernel2"
      HAB_BLDR_CHANNEL: "stable"

    expeditor:
      executor:
        docker:
          privileged: true

  - label: "[build] :linux: :two: build hab-sup"
    command:
      - .expeditor/scripts/verify/build_package.sh components/sup
    env:
      HAB_LICENSE: "accept-no-persist"
      BUILD_PKG_TARGET: "x86_64-linux-kernel2"
      HAB_BLDR_CHANNEL: "stable"

    expeditor:
      executor:
        docker:
          privileged: true

  - label: "[build] :linux: :two: build hab-pkg-export-tar"
    command:
      - .expeditor/scripts/verify/build_package.sh components/pkg-export-tar
    env:
      HAB_LICENSE: "accept-no-persist"
      BUILD_PKG_TARGET: "x86_64-linux-kernel2"
      HAB_BLDR_CHANNEL: "stable"

    expeditor:
      executor:
        docker:
          privileged: true

#######################################################################
# Things that have no tests but should be built to make sure they
# still build. - Windows
#######################################################################

  - label: "[build] :windows: test-probe"
    env:
      HAB_LICENSE: "accept-no-persist"
    command:
      - .expeditor/scripts/verify/build_package.ps1 test-services/test-probe
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    timeout_in_minutes: 40
    retry:
      automatic:
        limit: 1

  - label: "[build] :windows: hab"
    env:
      HAB_LICENSE: "accept-no-persist"
    command:
      - .expeditor/scripts/verify/build_package.ps1 components/hab
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    timeout_in_minutes: 40
    retry:
      automatic:
        limit: 1

  - label: "[build] :windows: launcher"
    env:
      HAB_LICENSE: "accept-no-persist"
    command:
      - .expeditor/scripts/verify/build_package.ps1 components/launcher
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    retry:
      automatic:
        limit: 1

  - label: "[build] :windows: pkg-export-container"
    env:
      HAB_LICENSE: "accept-no-persist"
    command:
      - .expeditor/scripts/verify/build_package.ps1 components/pkg-export-container
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    retry:
      automatic:
        limit: 1

  - label: "[build] :windows: pkg-export-tar"
    env:
      HAB_LICENSE: "accept-no-persist"
    command:
      - .expeditor/scripts/verify/build_package.ps1 components/pkg-export-tar
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    timeout_in_minutes: 40
    retry:
      automatic:
        limit: 1

  - label: "[build] :windows: plan-build-ps1"
    env:
      HAB_LICENSE: "accept-no-persist"
    command:
      - .expeditor/scripts/verify/build_package.ps1 components/plan-build-ps1
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    retry:
      automatic:
        limit: 1

  - label: "[build] :windows: studio"
    env:
      HAB_LICENSE: "accept-no-persist"
    command:
      - .expeditor/scripts/verify/build_package.ps1 components/studio
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    retry:
      automatic:
        limit: 1

  - label: "[build] :windows: sup"
    env:
      HAB_LICENSE: "accept-no-persist"
    command:
      - .expeditor/scripts/verify/build_package.ps1 components/sup
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    retry:
      automatic:
        limit: 1

  - label: "[build] :windows: windows-service"
    env:
      HAB_LICENSE: "accept-no-persist"
    command:
      - .expeditor/scripts/verify/build_package.ps1 components/windows-service
    expeditor:
      executor:
        docker:
          host_os: windows
          shell: [ "powershell", "-Command" ]
    retry:
      automatic:
        limit: 1

#######################################################################
# Things that have no tests but should be built to make sure they
# still build. - MacOS
#######################################################################
  - label: "[build] :mac: x86_64 hab"
    command:
      # We need to install bash 4+ so we are able to use all the modern capabilities.
      - brew install bash
      - .expeditor/scripts/verify/build_mac_package.sh components/hab
    env:
      HAB_LICENSE: "accept-no-persist"
      BUILD_PKG_TARGET: "x86_64-darwin"
      HOMEBREW_NO_INSTALL_CLEANUP: 1
      HOMEBREW_NO_AUTO_UPDATE: 1
    expeditor:
      executor:
        macos:
          os-version: "12"
          inherit-environment-vars: true
    timeout_in_minutes: 60
    retry:
      automatic:
        limit: 10 # Addressing current Anka system timeouts due to oversubscription

  - label: "[build] :mac: aarch64 hab"
    command:
      # We need to install bash 4+ so we are able to use all the modern capabilities.
      - brew install bash
      - .expeditor/scripts/verify/build_mac_package.sh components/hab
    env:
      HAB_LICENSE: "accept-no-persist"
      BUILD_PKG_TARGET: "aarch64-darwin"
      HOMEBREW_NO_INSTALL_CLEANUP: 1
      HOMEBREW_NO_AUTO_UPDATE: 1
    expeditor:
      executor:
        macos:
          os-version: "12"
          inherit-environment-vars: true
    timeout_in_minutes: 60
    retry:
      automatic:
        limit: 10 # Addressing current Anka system timeouts due to oversubscription
