version: '3.8'
services:
  tester:
    image: ${TESTCASE}_image
    domainname: habitat.dev
    environment:
      HAB_AUTH_TOKEN: ${HAB_AUTH_TOKEN}
      HAB_LICENSE: accept-no-persist
      HAB_NONINTERACTIVE: '1'
      TESTCASE: ${TESTCASE}
      COMPOSE_PROJECT_NAME: ${COMPOSE_PROJECT_NAME}
    volumes:
      - source: ./CTL_SECRET
        target: /hab/sup/default/CTL_SECRET
        type: bind
      - source: /var/run/docker.sock
        target: /var/run/docker.sock
        type: bind
      - source: ../../../.expeditor/scripts
        target: /scripts
        type: bind
    build:
      context: ${TESTCASE_DIR}
    depends_on:
      - bastion
      - alpha
      - beta
      - gamma

  alpha:
    environment:
      HAB_UPDATE_STRATEGY_FREQUENCY_MS: 3000
      HAB_UPDATE_STRATEGY_FREQUENCY_BYPASS_CHECK: 1
      RUST_LOG: habitat_sup::manager::service_updater=debug

  beta:
    environment:
      HAB_UPDATE_STRATEGY_FREQUENCY_MS: 3000
      HAB_UPDATE_STRATEGY_FREQUENCY_BYPASS_CHECK: 1
      RUST_LOG: habitat_sup::manager::service_updater=debug

  gamma:
    image: ${SUPERVISOR_IMAGE}
    domainname: habitat.dev
    environment:
      HAB_AUTH_TOKEN: ${HAB_AUTH_TOKEN}
      HAB_LICENSE: accept-no-persist
      HAB_NONINTERACTIVE: '1'
      TESTCASE: ${TESTCASE}
      COMPOSE_PROJECT_NAME: ${COMPOSE_PROJECT_NAME}
      HAB_UPDATE_STRATEGY_FREQUENCY_MS: 3000
      HAB_UPDATE_STRATEGY_FREQUENCY_BYPASS_CHECK: 1
      RUST_LOG: habitat_sup::manager::service_updater=debug
    volumes:
      - source: ./CTL_SECRET
        target: /hab/sup/default/CTL_SECRET
        type: bind
    command:
      - run
      - --listen-ctl=0.0.0.0:9632
      - --peer=bastion.habitat.dev
    hostname: gamma
    networks:
      default:
        aliases:
        - gamma.habitat.dev
    depends_on:
      - bastion
