# Updated to use modern Docker Compose without extends
version: '3.8'

# The basic idea of all this is that we set up a self-contained
# network of containers, each of which are running a Supervisor. At
# least one of those Supervisors is a "bastion" Supervisor that all
# the other Supervisors are peered to, thus forming a single Habitat
# network.
#
# Finally, there is a "tester" container, which is the main entry
# point of the test. This is a container that is in the same network
# as the Supervisors, and can communicate remotely with them using the
# shared CTL_SECRET and `--remote-sup` options for various `hab`
# commands. Think of this container as your workstation, from which
# you can start, stop, and otherwise manipulate services across your
# Habitat network. The command the tester container runs should
# basically be a straightforward script of Habitat commands and
# verification steps. If the command exits successfully, then the test
# has passed; if it exits with an error, the test has failed.

# YAML anchors for reusable configurations
  # All services should ultimately derive from this definition. This
  # ensures that they're all in the same network, have the same shared
  # CTL_SECRET, and have additional metadata set appropriately.
x-base-config: &base-config
  image: ${SUPERVISOR_IMAGE}
  domainname: habitat.dev
  environment:
    HAB_LICENSE: accept-no-persist
    HAB_NONINTERACTIVE: '1'
    TESTCASE: ${TESTCASE}
    COMPOSE_PROJECT_NAME: ${COMPOSE_PROJECT_NAME}
    HAB_AUTH_TOKEN: ${HAB_AUTH_TOKEN}
  volumes:
    - source: ./CTL_SECRET
      target: /hab/sup/default/CTL_SECRET
      type: bind

  # Defines a basic Supervisor service peered to our bastion
  # Supervisor. All Supervisors in the network will generally derive
  # from this definition in one way or another.
x-sup-base-config: &sup-base-config
  <<: *base-config
  command:
    - run
    - --listen-ctl=0.0.0.0:9632
    - --peer=bastion.habitat.dev

services:
  # The Supervisor containers are defined below. They're often simply
  # clones of each other (with different hostnames), but they can be
  # modified as required by tests.

  bastion:
    <<: *base-config
    hostname: bastion
    command:
      # Note that we override the existing command to make this a
      # permanent peer, and do not try to peer it to itself.
      - run
      - --listen-ctl=0.0.0.0:9632
      - --permanent-peer
    networks:
      default:
        # This `bastion.habitat.dev` name is important, since other
        # Supervisors will peer to it by default (see base service
        # definition)
        aliases:
        - bastion.habitat.dev

  # These services define just plain old ordinary Supervisors; they're
  # not running any services, and they're remotely-accessible to the
  # testing container.

  alpha:
    <<: *sup-base-config
    hostname: alpha
    networks:
      default:
        aliases:
        - alpha.habitat.dev
    depends_on:
      - bastion

  beta:
    <<: *sup-base-config
    hostname: beta
    networks:
      default:
        aliases:
        - beta.habitat.dev
    depends_on:
      - bastion

  # Feel free to add additional stock Supervisors here as test
  # scenarios get more complex.
