---
title: Try Habitat - Step 6
step: 6
total_steps: 9
---
h2.page-body--title Setting Up a Service Group Topology

p
  | So that last step was pretty powerful, but you're probably wondering how things
    were set up to talk to one another in the first place. It's actually not as
    complicated as you might suspect thanks to some built-in Habitat features.
p
  | By default, Habitat places running services into a
    <a href="/docs/concepts-communication/">Service Group</a> with a
    standalone topology. However, as we'll see below, you can explicitly start
    services in a user-defined group that can optionally apply an alternative
    topology.
p
  | Suppose your application needs to share state and requires a certain start
    order for its services. In this situation, you can leverage a leader/follower
    topology by simply adding a couple more instructions to the
    <code>hab start</code> command.

code
  | hab start -t leader habitat/postgresql

#success
  = partial "partials/advance_button" do
    | Next - Connect additional services

= partial "partials/terminal" do
