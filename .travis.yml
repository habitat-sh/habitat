branches:
  only:
  - master
  - auto
env:
  global:
  - PATH=$HOME/.cargo/bin:$PATH
  - secure: gdbeNjLU9smyegb7nNIwqi6oghu2TwQ9u0l0+BtqIUO6y3O/J9orkCGkWhwtaRkOtLVVakduC0qCCZDD24f/2aZoPN4XhHeNL6oDnq9TngKqi4/sOYRUQ5TB8xL+ja3H6Gx9bB1FhpohuMlfTbCnO3lLWP0Oj4btbcsfsYe8ytM=
  - secure: GoX6A9uqZ7avilS62w+Noju1ntmqK45C98apBrVnym0tDON3W7kJ5sUJiq6x3+oFOxn0QlaOX1Mku5GyesDE+NbGm4YlLLcucTv2gi9iab5HJsxhHNsLgyMWBPCj25n2qcaCQE0g7naRSThnpRFFV+U6wbqLBods0jKbL95yrPY=
matrix:
  include:
  - language: rust
    env:
    - COMPONENTS=bin LIBSODIUM=$HOME/pkgs/libsodium/1.0.8 LIBARCHIVE=$HOME/pkgs/libarchive/3.2.0 PKG_CONFIG_PATH="$PKG_CONFIG_PATH:$LIBARCHIVE/lib/pkgconfig:$LIBSODIUM/lib/pkgconfig" LD_LIBRARY_PATH="LD_LIBRARY_PATH:$LIBARCHIVE/lib:$LIBSODIUM/lib"
    rust: stable
    sudo: false
    addons:
      apt:
        packages:
        - build-essential
        - ca-certificates
        - curl
        - libbz2-dev
        - liblzma-dev
        - libprotobuf-dev
        - libssl-dev
        - libzmq3-dev
        - pkg-config
    cache:
      apt: true
      cargo: true
      directories:
      - "$HOME/rust"
      - "$HOME/pkgs"
      - components/director/target
      - components/hab/target
      - components/sup/target
    before_install:
    - ./support/ci/compile_libsodium.sh
    - ./support/ci/compile_libarchive.sh
    - ./support/ci/install_rustfmt.sh
    script:
    - ./support/ci/rust_tests.sh
    - ./support/ci/lint.sh
  - language: rust
    env:
    - COMPONENTS=lib LIBSODIUM=$HOME/pkgs/libsodium/1.0.8 LIBARCHIVE=$HOME/pkgs/libarchive/3.2.0 PKG_CONFIG_PATH="$PKG_CONFIG_PATH:$LIBARCHIVE/lib/pkgconfig:$LIBSODIUM/lib/pkgconfig" LD_LIBRARY_PATH="LD_LIBRARY_PATH:$LIBARCHIVE/lib:$LIBSODIUM/lib"
    rust: stable
    sudo: false
    addons:
      apt:
        packages:
        - build-essential
        - ca-certificates
        - curl
        - libbz2-dev
        - liblzma-dev
        - libprotobuf-dev
        - libssl-dev
        - libzmq3-dev
        - pkg-config
    cache:
      apt: true
      cargo: true
      directories:
      - "$HOME/rust"
      - "$HOME/pkgs"
      - components/builder-dbcache/target
      - components/builder-protocol/target
      - components/common/target
      - components/core/target
      - components/depot-client/target
      - components/net/target
    before_install:
    - ./support/ci/compile_libsodium.sh
    - ./support/ci/compile_libarchive.sh
    - ./support/ci/install_rustfmt.sh
    script:
    - ./support/ci/rust_tests.sh
    - ./support/ci/lint.sh
  - language: rust
    env:
    - COMPONENTS=srv LIBSODIUM=$HOME/pkgs/libsodium/1.0.8 LIBARCHIVE=$HOME/pkgs/libarchive/3.2.0 PKG_CONFIG_PATH="$PKG_CONFIG_PATH:$LIBARCHIVE/lib/pkgconfig:$LIBSODIUM/lib/pkgconfig" LD_LIBRARY_PATH="LD_LIBRARY_PATH:$LIBARCHIVE/lib:$LIBSODIUM/lib"
    rust: stable
    sudo: false
    addons:
      apt:
        packages:
        - build-essential
        - ca-certificates
        - curl
        - libbz2-dev
        - liblzma-dev
        - libprotobuf-dev
        - libssl-dev
        - libzmq3-dev
        - pkg-config
    cache:
      apt: true
      cargo: true
      directories:
      - "$HOME/rust"
      - "$HOME/pkgs"
      - components/builder-api/target
      - components/builder-jobsrv/target
      - components/builder-sessionsrv/target
      - components/builder-vault/target
      - components/builder-worker/target
      - components/depot/target
    before_install:
    - ./support/ci/compile_libsodium.sh
    - ./support/ci/compile_libarchive.sh
    - ./support/ci/install_rustfmt.sh
    script:
    - ./support/ci/rust_tests.sh
    - ./support/ci/lint.sh
  - language: node_js
    node_js: 4.2.6
    sudo: required
    env:
    - CXX=g++-4.8
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-4.8
        - wget
    cache:
      apt: true
      directories:
      - components/builder-web/node_modules
      - components/builder-web/typings
    before_install: npm config set spin=false
    install:
    - "(cd components/builder-web && npm install)"
    script:
    - "(cd components/builder-web && npm run travis)"
    - sudo -E bash -c "./support/ci/build_builder_web.sh"
    after_success:
    - "hart=$(source ./results/last_build.env && echo $pkg_artifact)"
    - "if [ -n \"$hart\" ]; then hab artifact upload ./results/$hart; fi"
  - language: ruby
    rvm: 2.3.1
    sudo: false
    cache:
      bundle: true
      directories:
      - www/build
      - www/vendor/bundle
    install:
    - "(cd www && bundle install --deployment)"
    script:
    - "(cd www && bundle exec middleman build)"
    deploy:
      provider: s3
      access_key_id: AKIAJD2LEPZPVODPFLIQ
      secret_access_key:
        secure: U1oAoekCDu6Qa94sANnJH9dfa6g0E9GpvDPwnE6Kv2/d8uprXapWtLvVJ8rnrB/4fLgDntqgMpZYbmETbsCkfnX1olxlch6J06Tel/xJPX//mPG7v3ZEYcpyKAfdI1X9je9jP23ijkEnFMtkjlJ/JDOd9nHqsbECeeUY3U8ZiUk=
      bucket: habitat-web-www
      local-dir: www/build
      skip_cleanup: true
      acl: public_read
      on:
        repo: habitat-sh/habitat
    after_deploy:
    - "./support/purge_website.sh"
notifications:
  slack:
    on_failure: always
    on_success: change
    secure: FjTKlrpHSKlUktFSf9W6ANmxWujelaN4bPRletBXkNwmZYwpqN1YC4lFwS16X0J6kNyvHGRva018YsUMtwI/FXtHH3YliyxCivmEoeAlZa+jMdy16pmBGhxo+mPC92SnHt1DhXfQUTstWw3h+Lq2F2MfwrB8k+nVBFJjfrF8HY0=
  webhooks: http://willem.habitat.sh:54856/travis
