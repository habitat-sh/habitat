The `hab` command-line interface (CLI) tool downloads its other components when it needs them, so setup for Habitat is centered on where you want the `hab` CLI installed and getting it integrated into your shell.

1.  Open a terminal window. Change directory to the directory where you want to place the `hab` CLI. The following example creates a directory called `bin` and places it at the root of the home directory:

        mkdir -p ~/bin && cd ~/bin

2. Copy the `hab` CLI to that directory.

3. Add the location for the `hab` CLI to your `PATH` environment variable.

       export PATH=$PATH:~/bin

    To keep from typing this in for every terminal window you use, add the above statement to your shell profile.

4. Open a terminal window and run `hab setup`. If your host machine is running Linux, the `hab` CLI must run as root, so we suggest running it as root through the `sudo` command.

   If you're running on Mac OS X, make sure your docker-machine is running and your shell is connected to it first.

       docker-machine start
       eval "$(docker-machine env machinename)"

5. Follow the instructions in the setup script. Create a new origin and a set of origin keys. Optionally, you can provide a [GitHub personal authorization token](https://help.github.com/articles/creating-an-access-token-for-command-line-use/) for the `hab` CLI to use to upload packages to the public depot and share them with the Habitat community. You can also provide anonymous data on your usage of the `hab` CLI. For information on the type of data we gather and how we intend to use it, see [Analytics in Habitat](/docs/about-analytics).

   > Note: The only rights the GitHub personal authorization token needs at present is `user.email` since it is only used for authentication. Also, you can opt-out of providing usage data at a later point in time by re-running the `hab setup` subcommand and typing `No` when asked if you want to provide usage data.
