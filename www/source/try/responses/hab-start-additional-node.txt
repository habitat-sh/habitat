hab-sup(MN): Starting core/redis
hab-sup(GS): Supervisor 172.17.0.6: 0edb11ea-c532-4336-ad06-67f0976f55a9
hab-sup(GS): Census redis.default: 097d6bab-fc66-4627-b39d-a9f25be56b31
hab-sup(GS): Starting inbound gossip listener
hab-sup(GS): Joining gossip peer at 172.17.0.4
hab-sup(GS): Starting outbound gossip distributor
hab-sup(GS): Starting gossip failure detector
hab-sup(CN): Starting census health adjuster
hab-sup(SC): Updated redis.config
hab-sup(TP): Restarting because the service config was updated via the census
hab-sup(TL): I have quorum, but no leader; starting an election!
hab-sup(TL): Starting election
hab-sup(TL): Becoming a follower
hab-sup(TP): Writing our census rumor: CensusEntry {
    id: Uuid("097d6bab-fc66-4627-b39d-a9f25be56b31"),
    member_id: Uuid("0edb11ea-c532-4336-ad06-67f0976f55a9"),
    hostname: "cfa8a502c6f0",
    ip: "172.17.0.6",
    suitability: 0,
    port: Some(
        "6379"
    ),
    exposes: Some(
        [
            "6379"
        ]
    ),
    leader: false,
    follower: true,
    data_init: false,
    vote: None,
    election: None,
    needs_write: Some(
        true
    ),
    initialized: false,
    keep_me: true,
    service: "redis",
    group: "default",
    alive: true,
    suspect: false,
    confirmed: false,
    detached: false,
    incarnation: LamportClock {
        counter: 1
    }
}
hab-sup(SC): Updated redis.config
hab-sup(TP): Restarting because the service config was updated via the census
redis(SV): Starting
hab-sup(TP): Writing our census rumor: CensusEntry {
    id: Uuid("097d6bab-fc66-4627-b39d-a9f25be56b31"),
    member_id: Uuid("0edb11ea-c532-4336-ad06-67f0976f55a9"),
    hostname: "cfa8a502c6f0",
    ip: "172.17.0.6",
    suitability: 0,
    port: Some(
        "6379"
    ),
    exposes: Some(
        [
            "6379"
        ]
    ),
    leader: false,
    follower: true,
    data_init: false,
    vote: None,
    election: None,
    needs_write: Some(
        true
    ),
    initialized: true,
    keep_me: true,
    service: "redis",
    group: "default",
    alive: true,
    suspect: false,
    confirmed: false,
    detached: false,
    incarnation: LamportClock {
        counter: 2
    }
}
redis(O):                 _._
redis(O):            _.-``__ ''-._
redis(O):       _.-``    `.  `_.  ''-._           Redis 3.0.7 (00000000/0) 64 bit
redis(O):   .-`` .-```.  ```\/    _.,_ ''-._
redis(O):  (    '      ,       .-`  | `,    )     Running in standalone mode
redis(O):  |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379
redis(O):  |    `-._   `._    /     _.-'    |     PID: 94
redis(O):   `-._    `-._  `-./  _.-'    _.-'
redis(O):  |`-._`-._    `-.__.-'    _.-'_.-'|
redis(O):  |    `-._`-._        _.-'_.-'    |           http://redis.io
redis(O):   `-._    `-._`-.__.-'_.-'    _.-'
redis(O):  |`-._`-._    `-.__.-'    _.-'_.-'|
redis(O):  |    `-._`-._        _.-'_.-'    |
redis(O):   `-._    `-._`-.__.-'_.-'    _.-'
redis(O):       `-._    `-.__.-'    _.-'
redis(O):           `-._        _.-'
redis(O):               `-.__.-'
redis(O):
redis(O): 94:S 03 May 15:32:29.683 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.
redis(O): 94:S 03 May 15:32:29.683 # Server started, Redis version 3.0.7
redis(O): 94:S 03 May 15:32:29.683 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
redis(O): 94:S 03 May 15:32:29.683 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.
redis(O): 94:S 03 May 15:32:29.684 * The server is now ready to accept connections on port 6379
redis(O): 94:S 03 May 15:32:30.669 * Connecting to MASTER 172.17.0.4:6379
redis(O): 94:S 03 May 15:32:30.670 * MASTER <-> SLAVE sync started
redis(O): 94:S 03 May 15:32:30.670 * Non blocking connect for SYNC fired the event.
redis(O): 94:S 03 May 15:32:30.671 * Master replied to PING, replication can continue...
redis(O): 94:S 03 May 15:32:30.671 * Partial resynchronization not possible (no cached master)
redis(O): 94:S 03 May 15:32:30.677 * Full resync from master: 8f26ced9f2d32e8208cef177d6315ec0152838c9:1
redis(O): 94:S 03 May 15:32:30.716 * MASTER <-> SLAVE sync: receiving 18 bytes from master
redis(O): 94:S 03 May 15:32:30.717 * MASTER <-> SLAVE sync: Flushing old data
redis(O): 94:S 03 May 15:32:30.717 * MASTER <-> SLAVE sync: Loading DB in memory
redis(O): 94:S 03 May 15:32:30.717 * MASTER <-> SLAVE sync: Finished with success

[1;32mSuccess! Upon starting this instance, the minimum quorum of three nodes was met and a leader/follower group was formed.
[1;33mSwitch between the windows and you'll see that the election automatically kicked off.
All three nodes are now up and Node 1 has been elected leader.

[1;36mThere is so much more that Habitat can do! Proceed to see our recommended next steps.
