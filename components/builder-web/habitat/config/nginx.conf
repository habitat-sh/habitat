# Configuration File - Nginx Server Configs
# http://nginx.org/en/docs/dirindex.html

daemon off;

# Sets the worker threads to the number of CPU cores available in the system for best performance.
# Should be > the number of CPU cores.
# Maximum number of connections = worker_processes * worker_connections
worker_processes auto;

# Maximum number of open files per worker process.
# Should be > worker_connections.
worker_rlimit_nofile 8192;

events {
  # If you need more connections than this, you start optimizing your OS.
  # That's probably the point at which you hire people who are smarter than you as this is *a lot* of requests.
  # Should be < worker_rlimit_nofile.
  worker_connections 8000;
}

# These paths are created in the init hook and need to exist

# The file storing the process ID of the main process
pid {{pkg.svc_var_path}}/nginx/pid;

http {
  client_body_temp_path {{pkg.svc_var_path}}/nginx/client-body;
  fastcgi_temp_path {{pkg.svc_var_path}}/nginx/fastcgi;
  proxy_temp_path {{pkg.svc_var_path}}/nginx/proxy;
  scgi_temp_path {{pkg.svc_var_path}}/nginx/scgi_temp_path;
  uwsgi_temp_path {{pkg.svc_var_path}}/nginx/uwsgi;

  # Hide nginx version information.
  server_tokens off;

  # Specify MIME types for files.
  include mime.types;
  default_type application/octet-stream;

  # Update charset_types to match updated mime.types.
  # text/html is always included by charset module.
  charset_types text/css application/javascript;

  # Include $http_x_forwarded_for within default format used in log files
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

  # How long to allow each connection to stay idle.
  # Longer values are better for each individual client, particularly for SSL,
  # but means that worker connections are tied up longer.
  keepalive_timeout 20s;

  # Speed up file transfers by using sendfile() to copy directly
  # between descriptors rather than using read()/write().
  # For performance reasons, on FreeBSD systems w/ ZFS
  # this option should be disabled as ZFS's ARC caches
  # frequently used files in RAM by default.
  sendfile on;

  # Don't send out partial frames; this increases throughput
  # since TCP frames are filled up before being sent out.
  tcp_nopush on;

  # Enable gzip compression.
  gzip on;

  # Compression level (1-9).
  # 5 is a perfect compromise between size and CPU usage, offering about
  # 75% reduction for most ASCII files (almost identical to level 9).
  gzip_comp_level 5;

  # Don't compress anything that's already small and unlikely to shrink much
  # if at all (the default is 20 bytes, which is bad as that usually leads to
  # larger files after gzipping).
  gzip_min_length 256;

  # Compress data even for clients that are connecting to us via proxies,
  # identified by the "Via" header (required for CloudFront).
  gzip_proxied any;

  # Tell proxies to cache both the gzipped and regular version of a resource
  # whenever the client's Accept-Encoding capabilities header varies;
  # Avoids the issue where a non-gzip capable client (which is extremely rare
  # today) would display gibberish if their proxy gave them the gzipped version.
  gzip_vary on;

  # Compress all output labeled with one of the following MIME-types.
  gzip_types
    application/javascript
    application/json
    application/vnd.ms-fontobject
    application/x-font-ttf
    font/opentype
    image/svg+xml
    image/x-icon
    text/css
  # text/html is always compressed by gzip module

    # This tells Nginx to cache open file handles, "not found" errors, metadata about files and their permissions, etc.
    #
    # The upside of this is that Nginx can immediately begin sending data when a popular file is requested,
    # and will also know to immediately send a 404 if a file is missing on disk, and so on.
    #
    # However, it also means that the server won't react immediately to changes on disk, which may be undesirable.
    #
    # In the below configuration, inactive files are released from the cache after 20 seconds, whereas
    # active (recently requested) files are re-validated every 30 seconds.
    #
    # Descriptors will not be cached unless they are used at least 2 times within 20 seconds (the inactive time).
    #
    # A maximum of the 1000 most recently used file descriptors can be cached at any time.
    #
    # Production servers with stable file collections will definitely want to enable the cache.
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # The X-Frame-Options header indicates whether a browser should be allowed
    # to render a page within a frame or iframe.
    add_header X-Frame-Options SAMEORIGIN;

    # MIME type sniffing security protection
    #    There are very few edge cases where you wouldn't want this enabled.
    add_header X-Content-Type-Options nosniff;

    # The X-XSS-Protection header is used by Internet Explorer version 8+
    # The header instructs IE to enable its inbuilt anti-cross-site scripting filter.
    add_header X-XSS-Protection "1; mode=block";

    # with Content Security Policy (CSP) enabled (and a browser that supports it (http://caniuse.com/#feat=contentsecuritypolicy),
    # you can tell the browser that it can only download content from the domains you explicitly allow
    # CSP can be quite difficult to configure, and cause real issues if you get it wrong
    # There is website that helps you generate a policy here http://cspisawesome.com/
    # TODO
    # add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline'; script-src 'self' https://www.google-analytics.com;";

    # Nginx's spdy module is compiled by default from 1.6
    # SPDY only works on HTTPS connections

    # Inform browser of SPDY availability
    add_header Alternate-Protocol  443:npn-spdy/3;

    # Adjust connection keepalive for SPDY clients:
    spdy_keepalive_timeout 300s; # up from 180 secs default

    # enable SPDY header compression
    spdy_headers_comp 6;

    # Force the latest IE version
    add_header "X-UA-Compatible" "IE=Edge";

    server {
        index index.html;
        listen *:80;
        server_name localhost;
        root {{pkg.svc_static_path}};

        location ~* ^/favicon.ico/ {
            access_log off;
            break;
        }

        location ~* ^/assets|node_modules/ {
            access_log off;
            add_header Cache-Control public;
            expires max;

            # Some browsers still send conditional-GET requests if there's a
            # Last-Modified header or an ETag header even if they haven't
            # reached the expiry date sent in the Expires header.
            add_header Last-Modified "";
            add_header ETag "";
            break;
        }
    }
}
