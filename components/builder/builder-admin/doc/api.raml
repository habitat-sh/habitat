#%RAML 0.8
---
title: Builder Admin API
version: v1

baseUri: https://{rootUri}/{version}
baseUriParameters:
    rootUri:
        description: |
            The root URI for the particular installation of Builder
        example: admin.habitat.sh, localhost:8080

mediaType: application/json
schemas:
    - account: |
        {
            "properties": {
                "id": {
                    "type": "string",
                    "required": true
                },
                "email": {
                    "type": "string",
                    "required": true
                },
                "name": {
                    "type": "string",
                    "required": true
                }
            }
        }
    - searchTerm: |
        {
            "properties": {
                "entity": {
                    "enum": ["account"],
                    "required": true
                },
                "attr": {
                    "enum": ["id", "name"],
                    "required": true
                },
                "value": {
                    "type": "string",
                    "required": true
                }
            }
        }
securitySchemes:
    - oauth_2_0:
        description: Builder supports OAuth 2.0 for authenticating all API requests.
        type: OAuth 2.0
        describedBy:
            headers:
                Authorization: &authorization
                    description: Used to send a valid OAuth 2 access token.
                    example: |
                        Authorization: Bearer 0b79bab50daca910b000d4f1a2b675d604257e42
            responses:
                401: &resp401
                    description: |
                        Bad or expired token. To fix, you should re-authenticate the user.
                403: &resp403
                    description: |
                        Bad OAuth request. Regenerate your token and try again.
        settings:
            authorizationUri: https://{rootUri}/oauth2/authorize
            accessTokenUri: https://{rootUri}/oauth2/token
            authorizationGrants: [ token ]

/status:
    get:
        description: Returns the health of the service
        responses:
            200:
                description: Service is healthy
            500:
                description: Server fault
            503:
                description: Service temporarily unavailable
/search:
    post:
        description: |
            Search an entity collection for entities matching the given search term
        securedBy: [oauth_2_0]
        body:
            application/json:
                schema: searchTerm
                example: |
                    {
                        "entity": "account",
                        "attr": "name",
                        "value": "reset"
                    }
        responses:
            200:
                description: One or more matching entities found
            404:
                description: No matching entities found
            422:
                description: Malformed search term in request body
/accounts:
    /{id}:
        get:
            description: Return an account entity matching the given ID
            securedBy: [oauth_2_0]
            responses:
                200:
                    body:
                        application/json:
                            schema: account
                            example: |
                                {
                                    "email": "reset@chef.io",
                                    "id": "42123940398628864",
                                    "name": "reset"
                                }
