daemon off;
pid {{pkg.svc_var_path}}/pid;

worker_processes  {{cfg.nginx.worker_processes}};
worker_rlimit_nofile {{cfg.nginx.worker_rlimit_nofile}};

events {
  worker_connections  {{cfg.nginx.worker_connections}};
}

http {
  client_body_temp_path {{pkg.svc_var_path}}/nginx/client-body;
  fastcgi_temp_path {{pkg.svc_var_path}}/nginx/fastcgi;
  proxy_temp_path {{pkg.svc_var_path}}/nginx/proxy;
  scgi_temp_path {{pkg.svc_var_path}}/nginx/scgi_temp_path;
  uwsgi_temp_path {{pkg.svc_var_path}}/nginx/uwsgi;

  include        mime.types;
  default_type   application/octet-stream;

  sendfile       {{cfg.http.sendfile}};
  tcp_nopush     {{cfg.http.tcp_nopush}};
  tcp_nodelay    {{cfg.http.tcp_nodelay}};

  keepalive_timeout  {{cfg.http.keepalive_timeout}};

  gzip  on;
  gzip_vary on;
  gzip_min_length 256;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types
    application/javascript
    application/json
    application/vnd.ms-fontobject
    application/x-font-ttf
    font/opentype
    image/svg+xml
    image/x-icon
    text/css

  gzip_disable "MSIE [1-6]\.";

  open_file_cache max=1000 inactive=20s;
  open_file_cache_valid 30s;
  open_file_cache_min_uses 2;
  open_file_cache_errors on;

  add_header X-Frame-Options SAMEORIGIN;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";
  add_header Alternate-Protocol  443:npn-spdy/3;

  add_header "X-UA-Compatible" "IE=Edge";
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains;";

  proxy_cache_path {{pkg.svc_var_path}}/cache levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;
  proxy_cache_key "$scheme$proxy_host$uri$is_args$args $http_user_agent";

  log_format nginx '$remote_addr - $remote_user [$time_local] '
                   '"$request" $status $body_bytes_sent $request_time '
                   '"$http_referer" "$http_user_agent" - $http_x_forwarded_for';

  upstream backend {
    server 127.0.0.1:{{bind.http.first.cfg.port}};
  }

  server {
    index index.html;
    listen       *:{{cfg.http.listen_port}};
    server_name  {{sys.hostname}};
    root         {{pkg.path}}/app;

    if ($http_x_forwarded_proto = "http") {
      rewrite ^(.*)$ https://$host$1 permanent;
    }

    access_log {{pkg.svc_path}}/logs/host.access.log nginx;
    error_log {{pkg.svc_path}}/logs/host.error.log error;

    location = /health {
      return 200;
      access_log off;
    }

    location /nginx_status {
      stub_status on;

      access_log off;
      allow 127.0.0.1;
      deny all;
    }

    location ~* ^/favicon.ico/ {
      access_log off;
      break;
    }

    location /index.html {
      add_header Cache-Control "private, no-cache, no-store";
      break;
    }

    location /habitat.conf.js {
      add_header Cache-Control "private, no-cache, no-store";
      root {{pkg.svc_config_path}};
      break;
    }

    location /v1/status {
      add_header Cache-Control "private, no-cache, no-store";
      proxy_pass http://backend;
      access_log off;
      break;
    }

    location ~* ^/v1/depot/.*/latest$ {
      add_header Cache-Control "private, no-cache, no-store";
      proxy_pass http://backend;
    }

    location /v1/depot {
      client_max_body_size 1024m;
      proxy_cache my_cache;
      proxy_pass http://backend;
    }

    location /v1 {
      add_header Cache-Control "private, no-cache, no-store";
      proxy_pass http://backend;
    }
  }
}
